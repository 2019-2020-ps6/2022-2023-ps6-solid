# Étape de construction
FROM node:latest AS build

# Définir le répertoire de travail pour l'étape de construction
WORKDIR /app

# Copier package*.json dans le répertoire de travail
COPY package*.json ./

# Installer les dépendances
RUN npm install

# Copier les fichiers source de l'application dans le répertoire de travail
COPY src ./src
COPY angular.json .
COPY tsconfig.app.json .
COPY tsconfig.json .

# Construire l'application Angular
RUN npm run build

# Étape de production avec Nginx
FROM nginx:alpine

# Changer le propriétaire des répertoires nécessaires pour l'utilisateur nginx
RUN chown -R nginx:nginx /var/cache/nginx && \
    chown -R nginx:nginx /var/run && \
    chown -R nginx:nginx /var/log/nginx && \
    chown -R nginx:nginx /etc/nginx/nginx.conf && \
    touch /var/run/nginx.pid && \
    chown -R nginx:nginx /var/run/nginx.pid

# Copier les fichiers de build Angular vers le répertoire de Nginx
COPY --from=build /app/dist/front-end /usr/share/nginx/html

# Copier la configuration personnalisée de Nginx (si nécessaire)
COPY nginx.conf /etc/nginx/conf.d/default.conf

# Copier le script de démarrage
COPY start.sh /start.sh

# Rendre le script de démarrage exécutable
RUN chmod +x /start.sh

# Utiliser l'utilisateur nginx pour exécuter Nginx
USER nginx

# Exposer le port 80
EXPOSE 80

# Démarrer Nginx via le script de démarrage
CMD ["/bin/sh", "/start.sh"]
